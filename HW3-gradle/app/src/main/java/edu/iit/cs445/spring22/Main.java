/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.iit.cs445.spring22;

public class Main {

	/**
	 * Entry Point of the program. 
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		
		// Lightbulb as per Part 2 - Inversion of Dependency
		Switchable bulb = new Lightbulb();
		
		// Create button and inject switchable object
		Button button = new Button(bulb);
		
		// Put it on and off
		button.switchOn();
		System.out.println();
		button.switchOff();
		System.out.println();
		
		
		// Part 3 - PushdownButton
		Switchable bulb2 = new Lightbulb();
		PushdownButton pushDownButton = new PushdownButton(bulb2); 
		// Push the button
		pushDownButton.PushButton();
		System.out.println();
		pushDownButton.PushButton();
				
		
		// Question from Part 3
		// Did you need to re-build the Lightbulb when you replaced the button?
		// Answer:
		/*
		 * No We don't need to re-build the bulb because we have implemented inversion of dependency
		 * using Switchable Interface. In either case we change the Bulb or we change the Button we 
		 * don't need to change the other component because they are not tightly coupled with each other. 
		 */
	}

}